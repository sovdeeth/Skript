test "EffEnchant overwriting var indices":
	set {_test::1} to diamond sword
	set {_test::a} to gold sword
	set {_test::hello world} to block at spawn of world "world"
	enchant {_test::*} with sharpness 1
	assert {_test::*} is diamond sword of sharpness 1, gold sword of sharpness 1, and block at spawn of world "world" with "failed to enchant items"
	assert indices of {_test::*} is "1", "a", and "hello world" with "enchanting modified indices"

test "EffReplace overwriting var indices":
	set {_test::1} to "abc"
	set {_test::a} to "cde"
	set {_test::hello world} to block at spawn of world "world"
	replace all "c" in {_test::*} with "z"
	assert {_test::*} is "abz", "zde", and block at spawn of world "world" with "failed to replace strings"
	assert indices of {_test::*} is "1", "a", and "hello world" with "replacing modified indices"

test "ExprVectorLength overwriting var indices":
	set {_test::1} to vector(0,3,0)
	set {_test::a} to vector(0,0,4)
	set {_test::hello world} to "abc"
	set vector length of {_test::*} to 1
	assert {_test::*} is vector(0,1,0), vector(0,0,1), and "abc" with "failed to change vector length"
	assert indices of {_test::*} is "1", "a", and "hello world" with "changing vector length modified indices"

test "ExprVectorXYZ overwriting var indices":
	set {_test::1} to vector(0,3,0)
	set {_test::a} to vector(0,0,4)
	set {_test::hello world} to "abc"
	set x component of {_test::*} to 1
	assert {_test::*} is vector(1,3,0), vector(1,0,4), and "abc" with "failed to change vector x"
	assert indices of {_test::*} is "1", "a", and "hello world" with "changing vector x modified indices"
